# Mediawiki with ENV file credentials
version: '3'
services:
  mediawiki:
    container_name: semanticmediawiki
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${MAP_INTERFACE}${MAP_PORT}:80"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - external
      - internal
    volumes:
      # Wiki images
      - ${BIND_DIR}/images:/var/www/html/images:rw
      
      # Use custom extensions directory
      - ${BIND_DIR}/extensions:/var/www/html/extensions-custom:rw

      # PHP Composer configuration
      - ${BIND_DIR}/composer.local.json:${COMPOSER_OVERRIDE}$/var/www/html/composer.local.json:rw

      # Set site favicon
      - ${BIND_DIR}/favicon.ico:/var/www/html/favicon.ico

      # Import LocalSettings
      # After initialization unset ${INIT}
      - ${BIND_DIR}/LocalSettings.php:${LOCALSETTINGS_OVERRIDE}/var/www/html/LocalSettings.php:rw

      # Export dir where semantic will be installed to make persistent
      - ${BIND_DIR}SemanticMediaWiki:/var/www/html/extensions/SemanticMediaWiki

      # PHP composer vendor folder (for persistence)
      - ${BIND_DIR}vendor:/var/www/html/vendor:rw
      
  database:
    image: mariadb
    restart: always
    networks:
      - internal
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: yes
    #user: 1000:1000
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      # Optionally initialize existing database
      - ${BIND_DIR}/.sql_init:/docker-entrypoint-initdb.d/:ro
      # Save DB data to volume
      - ${BIND_DIR}/db:/var/lib/mysql

volumes:
  images:  
  db:
  
networks:
  external:
  internal:
    internal: true                                                    
